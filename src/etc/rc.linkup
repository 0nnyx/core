#!/usr/local/bin/php
<?php

/*
 * Copyright (C) 2003-2005 Scott Ullrich <sullrich@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

require_once("config.inc");
require_once('auth.inc');
require_once("filter.inc");
require_once("interfaces.inc");
require_once("util.inc");
require_once("system.inc");

function handle_argument_group($action, $realif)
{
    global $config;

    $interface = convert_real_interface_to_friendly_interface_name($realif);
    if (empty($interface)) {
        return;
    }

    if (isset($config['interfaces'][$interface])) {
        // set defaults
        $ipaddr = '0.0.0.0';
        $ip6addr = '::';
        if (isset($config['interfaces'][$interface]['ipaddr'])) {
            $ipaddr = $config['interfaces'][$interface]['ipaddr'];
        }
        if (isset($config['interfaces'][$interface]['ipaddrv6'])) {
            $ip6addr = $config['interfaces'][$interface]['ipaddrv6'];
        }
        if (is_ipaddrv4($ipaddr) && is_ipaddrv6($ip6addr)) {
            log_error("Hotplug event detected for {$interface}({$realif}) but ignoring since interface is configured with static IP ({$ipaddr} {$ip6addr})");
            interfaces_staticarp_configure($interface);
            if ($action == 'start') {
                configdp_run('interface newip', array($realif));
            }
        } else {
            switch ($action) {
                case "stop":
                    log_error("DEVD Ethernet detached event for {$interface}");
                    interface_bring_down($interface);
                    break;
                case "start":
                    log_error("DEVD Ethernet attached event for {$interface}");
                    log_error("HOTPLUG: Configuring interface {$interface}");
                    interface_configure(false, $interface, true, true);
                    break;
            }
            filter_configure();
        }
    }
}

if (!file_exists("/var/run/booting")) {
    if ($argc < 3) {
        log_error("HOTPLUG event: The number of required parameters not passed!");
        exit;
    }
    $action = $argv[1];
    switch($action) {
      case "start":
      case "stop":
          handle_argument_group($argv[1], $argv[2]);
          break;
      default:
          log_error("HOTPLUG event: The action parameter passed is wrong($action) only start/stop/up/down are allowed!");
          break;
    }
}
